
# Firebase Client SDK Configuration (Required)
# Get these from your Firebase project settings > General > Your apps > Web app
NEXT_PUBLIC_FIREBASE_API_KEY="YOUR_API_KEY"
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="YOUR_AUTH_DOMAIN"
NEXT_PUBLIC_FIREBASE_PROJECT_ID="YOUR_PROJECT_ID"
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="YOUR_STORAGE_BUCKET"
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="YOUR_MESSAGING_SENDER_ID"
NEXT_PUBLIC_FIREBASE_APP_ID="YOUR_APP_ID"
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID="YOUR_MEASUREMENT_ID" # Optional

# Firebase Admin SDK Configuration (Required for Admin Actions like user creation)
# Option 1 (Recommended for Vercel/Cloud): Paste the *entire content* of your service account JSON key here as a single line.
# FIREBASE_SERVICE_ACCOUNT_KEY='{"type": "service_account", "project_id": "...", ...}'
# Option 2 (Local Dev): Leave the above empty/commented AND place your downloaded 'serviceAccountKey.json' file in the project root.
FIREBASE_SERVICE_ACCOUNT_KEY=

# --- Admin User Identification ---
# Choose ONE method for identifying the admin user:

# Method A (Simpler): Set the UID of the designated admin user here.
# Get the UID from Firebase Console > Authentication > Users after creating the first admin user.
# The useAuth hook checks this variable first.
# NEXT_PUBLIC_ADMIN_UID="REPLACE_WITH_ADMIN_USER_UID"

# Method B (More Flexible): Use Firebase Custom Claims.
# If you use this, you'll set the 'admin: true' claim when creating the user via the Admin Panel
# (requires enabling the checkbox in src/app/admin/create-user/page.tsx).
# You also need to modify src/hooks/useAuth.tsx to check for `idTokenResult.claims.admin` instead of the env var.
# If using this method, NEXT_PUBLIC_ADMIN_UID can be left commented out or empty.


# Genkit Configuration (Optional)
# GOOGLE_GENAI_API_KEY="YOUR_GOOGLE_AI_API_KEY"
